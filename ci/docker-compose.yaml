services:
  db:
    container_name: db
    build:
      context: .
      dockerfile: ./docker/postgres.Dockerfile
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2G

  redis_tokens:
    container_name: redis_tokens
    build:
      context: .
      dockerfile: ./docker/redis.Dockerfile
    environment:
      REDIS_HOST: "redis_tokens"
      REDIS_PORT: 6379
    ports:
      - 6379:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis_articles:
    container_name: redis_articles
    build:
      context: .
      dockerfile: ./docker/redis.Dockerfile
    environment:
      REDIS_HOST: "redis_articles"
      REDIS_PORT: 6380
    ports:
      - 6380:6379
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ..
      dockerfile: ./src/docker/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis_tokens:
        condition: service_healthy
      redis_articles:
        condition: service_healthy
    ports:
      - 7777:7777
volumes:
    db:
